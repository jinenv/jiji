"""initial migration

Revision ID: 25acabec9bd3
Revises: 
Create Date: 2025-06-23 06:55:35.093639

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '25acabec9bd3'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # CREATE TABLES IN CORRECT ORDER (dependencies last!)
    
    # 1. Create esprit_base first (no dependencies)
    op.create_table('esprit_base',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('element', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('base_tier', sa.Integer(), nullable=False),
    sa.Column('tier_name', sa.String(), nullable=True),
    sa.Column('base_atk', sa.Integer(), nullable=False),
    sa.Column('base_def', sa.Integer(), nullable=False),
    sa.Column('base_hp', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('abilities', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_esprit_base_base_tier'), 'esprit_base', ['base_tier'], unique=False)
    op.create_index(op.f('ix_esprit_base_element'), 'esprit_base', ['element'], unique=False)
    op.create_index(op.f('ix_esprit_base_name'), 'esprit_base', ['name'], unique=True)
    op.create_index(op.f('ix_esprit_base_tier_name'), 'esprit_base', ['tier_name'], unique=False)
    op.create_index(op.f('ix_esprit_base_type'), 'esprit_base', ['type'], unique=False)
    op.create_index('ix_espritbase_element_tier', 'esprit_base', ['element', 'base_tier'], unique=False)
    op.create_index('ix_espritbase_type_tier', 'esprit_base', ['type', 'base_tier'], unique=False)
    
    # 2. Create player table (references esprit table, but we'll add that FK later)
    op.create_table('player',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('discord_id', sa.BigInteger(), nullable=True),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('experience', sa.Integer(), nullable=False),
    sa.Column('energy', sa.Integer(), nullable=False),
    sa.Column('max_energy', sa.Integer(), nullable=False),
    sa.Column('last_energy_update', sa.DateTime(), nullable=False),
    sa.Column('stamina', sa.Integer(), nullable=False),
    sa.Column('max_stamina', sa.Integer(), nullable=False),
    sa.Column('last_stamina_update', sa.DateTime(), nullable=False),
    sa.Column('last_active', sa.DateTime(), nullable=False),
    sa.Column('leader_esprit_stack_id', sa.Integer(), nullable=True),
    sa.Column('total_attack_power', sa.Integer(), nullable=False),
    sa.Column('total_defense_power', sa.Integer(), nullable=False),
    sa.Column('total_hp', sa.Integer(), nullable=False),
    sa.Column('current_area_id', sa.String(), nullable=False),
    sa.Column('highest_area_unlocked', sa.String(), nullable=False),
    sa.Column('quest_progress', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('total_quests_completed', sa.Integer(), nullable=False),
    sa.Column('revies', sa.Integer(), nullable=False),
    sa.Column('erythl', sa.Integer(), nullable=False),
    sa.Column('inventory', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('tier_fragments', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('element_fragments', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('daily_quest_streak', sa.Integer(), nullable=False),
    sa.Column('last_daily_reset', sa.Date(), nullable=False),
    sa.Column('weekly_points', sa.Integer(), nullable=False),
    sa.Column('last_weekly_reset', sa.Date(), nullable=False),
    sa.Column('last_daily_echo', sa.Date(), nullable=True),
    sa.Column('total_battles', sa.Integer(), nullable=False),
    sa.Column('battles_won', sa.Integer(), nullable=False),
    sa.Column('total_fusions', sa.Integer(), nullable=False),
    sa.Column('successful_fusions', sa.Integer(), nullable=False),
    sa.Column('total_awakenings', sa.Integer(), nullable=False),
    sa.Column('total_echoes_opened', sa.Integer(), nullable=False),
    sa.Column('collections_completed', sa.Integer(), nullable=False),
    sa.Column('favorite_element', sa.String(), nullable=True),
    sa.Column('friend_code', sa.String(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.Column('guild_contribution_points', sa.Integer(), nullable=False),
    sa.Column('notification_settings', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('last_quest', sa.DateTime(), nullable=True),
    sa.Column('last_fusion', sa.DateTime(), nullable=True),
    sa.Column('total_revies_earned', sa.Integer(), nullable=False),
    sa.Column('total_erythl_earned', sa.Integer(), nullable=False),
    sa.Column('total_energy_spent', sa.Integer(), nullable=False),
    sa.Column('total_stamina_spent', sa.Integer(), nullable=False),
    sa.Column('skill_points', sa.Integer(), nullable=False),
    sa.Column('allocated_skills', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('skill_reset_count', sa.Integer(), nullable=False),
    sa.Column('upkeep_paid_until', sa.DateTime(), nullable=False),
    sa.Column('total_upkeep_cost', sa.Integer(), nullable=False),
    sa.Column('last_upkeep_calculation', sa.DateTime(), nullable=False),
    sa.Column('building_slots', sa.Integer(), nullable=False),
    sa.Column('total_buildings_owned', sa.Integer(), nullable=False),
    sa.Column('total_passive_income_collected', sa.Integer(), nullable=False),
    sa.Column('total_upkeep_paid', sa.Integer(), nullable=False),
    sa.Column('times_went_bankrupt', sa.Integer(), nullable=False),
    sa.Column('achievements_earned', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.Column('achievement_points', sa.Integer(), nullable=False),
    sa.Column('last_daily_reward', sa.Date(), nullable=True),
    sa.Column('daily_streak', sa.Integer(), nullable=False),
    sa.Column('shop_purchase_history', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('friend_code')
    )
    op.create_index(op.f('ix_player_discord_id'), 'player', ['discord_id'], unique=True)
    op.create_index('ix_player_guild_id', 'player', ['guild_id'], unique=False)
    op.create_index('ix_player_level', 'player', ['level'], unique=False)
    op.create_index('ix_player_total_attack_power', 'player', ['total_attack_power'], unique=False)
    
    # 3. Create esprit table (depends on both esprit_base and player)
    op.create_table('esprit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('esprit_base_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('awakening_level', sa.Integer(), nullable=False),
    sa.Column('element', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['esprit_base_id'], ['esprit_base.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['player.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_esprit_esprit_base_id'), 'esprit', ['esprit_base_id'], unique=False)
    op.create_index(op.f('ix_esprit_owner_id'), 'esprit', ['owner_id'], unique=False)
    
    # 4. Now add the circular FK from player to esprit (leader_esprit_stack_id)
    op.create_foreign_key(
        'fk_player_leader_esprit_stack_id',
        'player', 'esprit',
        ['leader_esprit_stack_id'], ['id']
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop in reverse order
    op.drop_constraint('fk_player_leader_esprit_stack_id', 'player', type_='foreignkey')
    
    op.drop_index(op.f('ix_esprit_owner_id'), table_name='esprit')
    op.drop_index(op.f('ix_esprit_esprit_base_id'), table_name='esprit')
    op.drop_table('esprit')
    
    op.drop_index('ix_player_total_attack_power', table_name='player')
    op.drop_index('ix_player_level', table_name='player')
    op.drop_index('ix_player_guild_id', table_name='player')
    op.drop_index(op.f('ix_player_discord_id'), table_name='player')
    op.drop_table('player')
    
    op.drop_index('ix_espritbase_type_tier', table_name='esprit_base')
    op.drop_index('ix_espritbase_element_tier', table_name='esprit_base')
    op.drop_index(op.f('ix_esprit_base_type'), table_name='esprit_base')
    op.drop_index(op.f('ix_esprit_base_tier_name'), table_name='esprit_base')
    op.drop_index(op.f('ix_esprit_base_name'), table_name='esprit_base')
    op.drop_index(op.f('ix_esprit_base_element'), table_name='esprit_base')
    op.drop_index(op.f('ix_esprit_base_base_tier'), table_name='esprit_base')
    op.drop_table('esprit_base')
    # ### end Alembic commands ###